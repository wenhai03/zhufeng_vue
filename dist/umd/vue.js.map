{"version":3,"file":"vue.js","sources":["../../src/observe/array.js","../../src/util.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 (原来的方法)\nlet oldArrayProtoMethods = Array.prototype\n\n// 继承一下\nexport let arrayProtoMethods = Object.create(oldArrayProtoMethods)\n\nlet methods = [\n  'push',\n  'pop',\n  'unshift',\n  'shift',\n  'reverse',\n  'splice',\n  'sort'\n]\n\nmethods.forEach(method => {\n  arrayProtoMethods[method] = function (...args) {\n    // this就是observe里的value\n    const result = oldArrayProtoMethods[method].call(this, args)\n    let inserted\n    let ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift': // 这两个方法都是追加 追加的内容可能是对象类型，应该再次进行劫持\n        inserted = args\n        break\n      case 'splice': // vue.$set原理\n        inserted = args.slice(2) // arr.splice(0, 1, {a: 1})\n      default:\n        break;\n    }\n    if (inserted) {\n      // 给数组新增的值也要进行观测\n      ob.observeArray(inserted)\n    }\n    \n    // console.log('数组方法被调用了')\n    return result\n  }\n})\n","export function proxy (vm, data, key) {\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[data][key] // vm._data.a\n    },\n    set(newValue){\n      vm[data][key] = newValue\n    }\n  })\n}\n\nexport function defineProperty(target, key, value) {\n  Object.defineProperty(target, '__ob__', {\n    enumerable: false, // 不能被枚举，不能被循环出来\n    configurable: false,\n    value: value\n  })\n}\n\nexport const LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'update',\n  'beforeDestroy',\n  'destroy',\n]\n\nconst strats = {}\nstrats.data = function (parentVal, childValue) {\n  // 这里应该有合并 data 的策略\n  return childValue\n}\nstrats.computed = function () {}\nstrats.watch = function () {}\nfunction mergeHook(parentVal, childValue) { // 生命周期的合并\n  if (childValue) {\n    if (parentVal) {\n      return parentVal.concat(childValue)  // 爸爸和儿子进行拼接\n    } else {\n      return [childValue] // 儿子需要转化成数组\n    }\n  } else {\n    return parentVal // 不合并了 采用父亲的\n  }\n\n}\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\nexport function mergeOptions(parent, child) {\n  // 遍历父亲，可能是父亲有 儿子没有\n  const options = {}\n  \n  for (let key in parent) {\n    mergeField(key)\n  }\n  \n  // 儿子有父亲没有\n  for (const key in child) { // 将儿子多的赋予到父亲上\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n  \n  function mergeField(key) { // 合并字段\n    // 根据key 不同的策略来进行合并\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      // todo默认合并\n      options[key] = child[key]\n    }\n  }\n  \n  return options\n}\n","import {arrayProtoMethods} from \"./array\"\nimport {defineProperty} from \"../util\"\n\nclass Observer {\n  constructor (value) {\n    // 使用defineProperty重新定义属性\n    \n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n    defineProperty(value, '__ob__', this)\n    \n    if (Array.isArray(value)) {\n      // 我希望调用push unshift splice reverse pop\n      // 函数劫持 切片编程\n      value.__proto__ = arrayProtoMethods\n      // 观测数组中的对象类型，对象变化也要做一些事\n      this.observeArray(value ) // 数组中普通类型是不做类型观测的\n    } else {\n      this.walk(value)\n    }\n  }\n  \n  observeArray (value) {\n    value.forEach(item => {\n      observe(item) // 观测数组中的对象类型\n    })\n  }\n  walk (data) {\n    let keys = Object.keys(data) // 获取对象的key\n  \n    keys.forEach(key  => {\n      defineReactive(data, key, data[key])\n    })\n  }\n\n}\n\n// 封装 继承\nfunction defineReactive (data, key, value) {\n  observe(value) // 如果是对象类型再进行观测(递归)\n  Object.defineProperty(data, key,{\n    get () {\n      return value\n    },\n    set (newValue) {\n      if (newValue === value) return\n      observe(newValue) // 如果用户将值改成对象继续监控\n      value = newValue\n    }\n  })\n}\n\nexport function observe(data){\n  // typeof null 也是 object\n  // 不能不是对象 并且不是null\n  if (typeof data !== 'object' || data == null) {\n    return\n  }\n  if (data.__ob__) {\n    return data\n  }\n  return new Observer(data)\n  \n  // 只观测存在的属性 data: {a: 1, b: 2}\n  // 数组中更改索引和长度 无法被监控\n}\n","import {observe} from \"./observe/index\"\nimport {proxy} from \"./util\"\n\nexport function initState (vm) {\n  const opts = vm.$options\n  // vue的数据来源 属性 方法 数据 计算属性 watch\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethod(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initData (vm) { // 数据的初始化操作\n  let data = vm.$options. data // 用户传递的data\n  // vm._data保存用户的所有data\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data\n  \n  for (let key in data) {\n    proxy(vm, '_data', key)\n  }\n  observe(data) // 让这个对象重新定义 set 和 get\n  \n}\n\nfunction initWatch (vm) {\n\n}\n\nfunction initComputed (vm) {\n\n}\n\n\nfunction initProps (vm) {\n\n}\n\nfunction initMethod (vm) {\n\n}\n","const unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/\n\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeRegExp.source}]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 开始标签部分，不包含开始标签的结尾。如 <div class=\"className\" ></div>，匹配的是 '<div class=\"className\"'\nconst startTagClose = /^\\s*(\\/?)>/ // 开始标签的结尾部分。如 <div class=\"className\" ></div>，匹配的是 ' >'\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // '</div><p></p>' 匹配结果为 </div>\n\n\nexport function parseHTML (html) {\n  function createASTEElement(tagName, attrs) {\n    return {\n      tag: tagName, // 标签名\n      type: 1, // 元素类型\n      children: [], // 孩子列表\n      attrs, // 属性集合\n      parent: null // 父元素\n    }\n  }\n  let root;\n  let currentParent\n  let stack = []\n  function start(tagName, attrs) {\n    // console.log(tagName, attrs, '---开始标签----')\n    let element = createASTEElement(tagName, attrs)\n    if (!root) {\n      root = element\n    }\n    currentParent = element // 当前解析的标签 保存起来\n    stack.push(element)\n  }\n  function end(tagName) {  // 在结尾标签处 创建父子关系\n    let element = stack.pop() // 取出栈中的最后一个\n    currentParent = stack[stack.length - 1] //\n    if (currentParent) { // 在闭合时可以知道这个标签的父亲是谁\n      element.parent = currentParent\n      currentParent.children.push(element)\n    }\n  }\n  function chars(text) {\n    // console.log(text, '---文本标签----')\n    text = text.replace(/\\s/g, '')\n    if (text) {\n      currentParent.children.push({\n        type: 3,\n        text\n      })\n    }\n  }\n  \n  \n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance (start[0].length) // 删除开始标签\n      let end;\n      let attr;\n      // 不是结尾标签 能匹配到属性\n      while(!(end=html.match(startTagClose)) && (attr=html.match(attribute))) {\n        match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5]})\n        advance(attr[0].length)  // 去掉当前属性\n      }\n      if (end) { // >\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n  \n  function advance (n) {\n    html = html.substring(n)\n  }\n  \n  while (html){ // 只要html不为空字符串就一直解析\n    let textEnd = html.indexOf('<')\n    if (Number(textEnd) === 0) {\n      // 肯定是标签\n      const startTagMatch = parseStartTag() // 开始标签匹配的结果 处理开始\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n      const endTagMatch = html.match(endTag)\n      if (endTagMatch) { // 处理结束标签\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1]) // 将结束标签传入\n        continue\n      }\n    }\n    let text\n    if (textEnd > 0) { // 是文本\n      text = html.substring(0, textEnd)\n    }\n    if (text) { // 处理文本\n      advance(text.length)\n      chars(text)\n    }\n  }\n  \n  return root\n}\n","// 编写 <div id=\"app\" style=\"color: red\">hello {{name}} <span>hello</span></div>\n\n/*\n  结果：\n  render() {\n    return _c('div', {id: 'app', style: {color: 'red'}}, _v('hello' + _s(name), _c('span', null, _v('hello'))))\n  }\n  */\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n// 语法层面的转义\nfunction genProps (attrs) { // id \"app\"   style \"color: red\"\n  // console.log('attrs -> ', attrs)\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i]\n    if (attr.name === 'style') { // 对样式进行特殊处理\n      let obj = {}\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  \n  return `{${str.slice(0, -1)}}`\n}\n\nfunction gen (node) {\n  if (Number(node.type) === 1) {\n    return generate(node) // 生成元素节点的字符串\n  } else {\n    let text = node.text // 获取文本\n    if (!defaultTagRE.test(text)) {\n      // 如果是普通文本 不带{{}}\n      return `_v(${JSON.stringify(text)})` // _v(hello)\n    }\n    let tokens = [] // 存放每一段的代码\n    // 如果正则是全局模式 需要每次使用前置为0\n    let lastIndex = defaultTagRE.lastIndex = 0\n    let match, index // 每次匹配到的结果\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    return `_v(${tokens.join('+')})`\n  }\n}\n\nfunction getChildren (el) {\n  const children = el.children\n  if (children) { // 将所有转化后的儿子用逗号拼接起来\n    return children.map(child => gen(child)).join(',')\n  }\n}\n\nexport function generate (el) {\n  let children = getChildren(el) // 儿子的生成\n  let code = `_c('${el.tag}', ${\n    el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'\n  }${\n    children ? `, ${children}` : ''\n  })`\n  return code\n}\n","import {parseHTML} from \"./parse\"\nimport {generate} from \"./generate\"\n\n\nexport function compileToFunctions (template) {\n   // html模板 => render函数  (ast是用来描述代码的)\n  // 1.需要将html代码转化成 ast 语法树 可以用ast树来描述语言本身\n  \n  // 前端必须要掌握的数据结构 (树)\n  let ast = parseHTML(template)\n  \n  // 2.优化静态节点\n  \n  // 3.通过这课树 重新的生成代码\n  let code = generate(ast)\n  // console.log(code)\n  \n  // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果\n  let render = new Function(`with(this){return ${code}}`)\n  // console.log(render)\n  return render\n  \n}\n\n","export function patch (oldVnode, vnode) {\n  \n  // oldVnode => id#app   vnode 我们根据模板产生的虚拟dom\n  \n  // 将虚拟节点转化成真实节点\n  // console.log(oldVnode, vnode)\n  let el = createElm(vnode) // 产生真实的dom\n  let parentElm = oldVnode.parentNode // 获取老的app的父亲 => body\n  parentElm.insertBefore(el, oldVnode.nextSibling) // 当前的真实元素插入到app的后面\n  parentElm.removeChild(oldVnode) // 删除老的节点\n  \n  // let el = createElm(vnode)\n}\n\nfunction createElm (vnode) {\n  let {tag, children, key, data, text} = vnode\n  if (typeof tag == 'string') { // 创建元素 放到vnode上\n    vnode.el = document.createElement(tag)\n    \n    // 只有元素才有属性\n    updateProperties(vnode)\n    \n    children.forEach(child => { // 遍历儿子 将儿子渲染后的结果扔到父亲中\n      vnode.el.appendChild(createElm(child))\n    })\n  } else { // 创建文件 放到vnode.el上\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\nfunction updateProperties (vnode) {\n  let el = vnode.el\n  let newProps = vnode.data || {}\n  for (let key in newProps) {\n    if (key === 'style') {\n      for (let styleName in newProps.style) {\n        el.style[styleName] = newProps.style[styleName]\n      }\n    } else if (key === 'class') {\n      el.className = newProps.class\n    } else {\n      el.setAttribute(key, newProps[key])\n    }\n  }\n  \n}\n","import {patch} from \"./vdom/patch.js\"\n\nexport function lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode) {\n    const vm = this\n    patch(vm.$el, vnode)\n    \n  }\n}\n\nexport function mountComponent (vm, el) {\n  // 调用render方法去渲染 el 属性\n  // 先调用render方法创建虚拟节点，在续集节点渲染到页面上\n  callHook(vm, 'beforeMount')\n  vm._update(vm._render())\n  callHook(vm, 'mounted')\n}\n\nexport function callHook(vm, hook) {\n  const handlers = vm.$options[hook] // vm.$options.created = [a1, a2, a3]\n  if (handlers) {\n    for (let i = 0; i < handlers.length; i++) {\n      handlers[i].call(vm) // 更改生命周期中的this\n    }\n  }\n}\n","import {initState} from './state'\nimport {compileToFunctions} from \"./compiler/index\"\nimport {callHook, mountComponent} from \"./lifecycle\"\nimport {mergeOptions} from \"./util\"\n\n// 在原型上添加一个init方法\nexport function initMixin (Vue) {\n  // 全局组件和局部组件的区别\n  Vue.prototype._init = function (options) {\n    // 数据的劫持\n    const vm = this // vue中使用 this.$options 指代的就是用户传递的属性\n    // 需要将用户自定义的options和全局的option合并\n    vm.$options = mergeOptions(vm.constructor.options, options)\n    callHook(vm, 'beforeCreate')\n    // 初始化状态\n    initState(vm)\n    callHook(vm, 'created')\n    // 如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n  // 1.render  2.template  3.外部template  (el存在的时候)\n  Vue.prototype.$mount = function (el) {\n    // 挂载操作\n    const vm = this\n    const options = vm.$options\n    el = document.querySelector(el)\n    vm.$el = el\n    \n    if (!options.render) {\n      let template = options.template\n      if (!template && el) {\n        template = el.outerHTML\n      }\n      // template => render方法 编译原理 将模板编译成render函数\n      // 1.处理模板变为sat树 2.标记静态节点 3.codegen => return 字符串 4.new Function + with (render 函数)\n      const render = compileToFunctions(template)\n      options.render = render\n    }\n    // 需要挂载这个组件\n    mountComponent(vm, el)\n  }\n}\n","export function renderMixin (Vue) { // 用对象来描述dom结构\n  \n  Vue.prototype._c = function () { // 创建虚拟dom元素\n    return createElement(...arguments)\n  }\n  // 1.当结果是对象时 会对这个对象取值\n  Vue.prototype._s = function (val) { // stringify\n    return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val\n  }\n  Vue.prototype._v = function (text) { // 创建虚拟dom文本元素\n    return createTextVnode(text)\n  }\n  \n  Vue.prototype._render = function () {  // _render = render\n    const vm = this\n    const render = vm.$options.render\n    let vnode = render.call(vm)\n    // console.log(vnode)\n    return vnode\n  }\n}\n\n// _c('div', {}, 1,2,3,4,5)\nfunction createElement (tag, data = {}, ...children) {\n  return vnode(tag, data, data.key, children)\n}\n\nfunction createTextVnode (text) {\n  return vnode(undefined, undefined, undefined, undefined, text)\n}\n\n// 用来产生虚拟dom，操作真实dom浪费性能\nfunction vnode (tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text\n  }\n}\n","import {mergeOptions} from \"../util\"\n\nexport function initGlobalApi(Vue) {\n  Vue.options = {}  // Vue.components  Vue.directive\n  Vue.mixin = function (mixin) {\n    // 合并对象 (先考虑生命周期)  不考虑其他的合并 data computed watcher\n    this.options = mergeOptions(this.options, mixin)\n    \n    // console.log(this.options) // this.options = {created: [a, b]}\n  }\n  \n  // Vue.options, options\n  // 用户 new Vue({created() {}})\n}\n","// Vue的核心代码 只是Vue的一个声明\nimport {initMixin} from './init'\nimport {lifecycleMixin} from \"./lifecycle\"\nimport {renderMixin} from \"./vdom/index\"\nimport {initGlobalApi} from \"./global-api/index.js\"\n\n// 用Vue 的构造函数 创建组件\nfunction Vue(options) {\n  this._init(options) // 组件初始化的入口\n}\n\n// 原型方法\ninitMixin(Vue) // init方法\nlifecycleMixin(Vue) // _update\nrenderMixin(Vue) // _render\n\n\n// 静态方法 Vue.component Vue.directive Vue.extend  Vue.mixin ...\ninitGlobalApi(Vue)\n// 初始方法\nexport default Vue\n"],"names":[],"mappings":"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"}